blueprint:
  name: Action on Device Off Count/Percentage (Time-Based)
  description: >-
    At a specified time (e.g., a fixed time, sunrise, or sunset),
    this automation checks if a certain number or percentage of selected
    devices are off. If the condition is met, it runs an action.
  domain: automation
  input:
    trigger_time:
      name: Trigger Time
      description: >-
        The time to check the devices. 
        Use a 24-hour format for a fixed time (e.g., "22:00:00").
        Or, use "sunrise" or "sunset" with an optional offset.
        Examples: "sunset", "sunrise", "sunset -00:45:00", "sunrise +01:30:00".
      selector:
        text:
      default: "22:00:00"
    lights_target:
      name: Lights to Monitor
      description: Select the light entities to monitor. Leave blank if you only want to monitor switches.
      selector:
        entity:
          domain: light
          multiple: true
      default: []
    switches_target:
      name: Switches to Monitor
      description: Select the switch entities to monitor. Leave blank if you only want to monitor lights.
      selector:
        entity:
          domain: switch
          multiple: true
      default: []
    threshold_type:
      name: Condition Type
      description: Choose whether to use a fixed number or a percentage for the condition.
      selector:
        select:
          options:
            - "Number"
            - "Percentage"
      default: "Number"
    threshold_number:
      name: Number of Devices Off
      description: (Used if Condition Type is 'Number') Run action when at least this many devices are off.
      selector:
        number:
          min: 1
          max: 100
          step: 1
      default: 1
    threshold_percentage:
      name: Percentage of Devices Off
      description: (Used if Condition Type is 'Percentage') Run action when at least this percentage of devices are off.
      selector:
        number:
          min: 1
          max: 100
          step: 1
          unit_of_measurement: "%"
      default: 50
    action_to_run:
      name: Actions
      description: The actions to run when the condition is met.
      selector:
        action:

# This section defines variables that will be used in the automation logic.
variables:
  # Get the selected entity lists from the inputs.
  lights: !input lights_target
  switches: !input switches_target
  
  # Combine the lists of lights and switches into one master list of entity IDs.
  all_entity_ids: "{{ (lights | default([])) + (switches | default([])) }}"

  # Count the total number of entities being monitored.
  total_entities: "{{ all_entity_ids | count }}"

  # Create a list containing only the entities that are currently 'off'.
  off_entities: "{{ all_entity_ids | select('is_state', 'off') | list }}"

  # Count how many entities are in the 'off' state.
  off_count: "{{ off_entities | count }}"

  # Get the user-defined threshold type and values from the inputs.
  threshold_type: !input threshold_type
  threshold_number: !input threshold_number
  threshold_percentage: !input threshold_percentage

  # Calculate the required number of 'off' devices based on the selected condition type.
  # If 'Percentage' is chosen, it calculates the number and rounds up to the nearest whole number.
  # Otherwise, it uses the fixed number.
  required_off_count: >
    {% if threshold_type == 'Percentage' and total_entities > 0 %}
      {{ (total_entities * (threshold_percentage / 100)) | round(0, 'ceil') | int }}
    {% else %}
      {{ threshold_number | int }}
    {% endif %}

# The automation will trigger at the time specified in the 'trigger_time' input.
trigger:
  - platform: time
    at: !input trigger_time

# The condition checks if the number of devices that are currently off is greater than
# or equal to the required number we calculated in the variables section.
condition:
  - condition: template
    value_template: "{{ off_count >= required_off_count }}"

# This is the action that will be executed when the trigger and condition are met.
action: !input action_to_run

mode: single
